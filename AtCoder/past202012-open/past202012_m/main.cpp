#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
using ll = long long;
using pi = pair<int, int>;

// 切断後に全ての棒の長さがX以上L以下となるような棒の切り方を存在するか調べる関数

bool check(int N, long long L, const std::vector<long long> &A, ll X) {
    ll S[200010] = {0};
    REP(i, N) {
        S[i + 1] = S[i] + A[i];
    }
    ll l = 0;
    ll r = 0;
    ll C[200010] = {0};
    ll D[200010] = {0};
    D[0]++;
    D[1]--;
    REP(i, N) {
        if (i > 0) {
            C[i] = C[i - 1] + D[i];
        } else {
            C[i] = D[i];
        }
        if (C[i] == 0) {
            continue;
        }
        while (l <= N && (S[l] - S[i]) < X) {
            l++;
        }
        if (l > N) {
            continue;
        }

        while (r + 1 <= N && S[r + 1] - S[i] <= L) {
            r++;
        }
        D[l]++;
        if (r + 1 <= N) {
            D[r + 1]--;
        }
    }
    // cout << "C[N-1]: " << C[N - 1] << endl;
    C[N] = C[N - 1] + D[N];
    // cout << "C[N]: " << C[N] << endl;
    if (C[N] > 0) {
        return true;
    }
    return false;
}

long long solve(int N, long long L, const std::vector<long long> &A) {
    // check(X)がTrueとなるような最大のXを求める二分探索
    ll X_ok = 0;
    ll X_ng = L + 1;
    ll X;
    while ((X_ng - X_ok) > 1) {
        // cout << "X_ok: " << X_ok << endl;
        // cout << "X_ng: " << X_ng << endl;
        X = (X_ng + X_ok) / 2;
        // cout << "X: " << X << endl;

        if (check(N, L, A, X)) {
            // cout << "hoge" << endl;
            X_ok = X;
        } else {
            // cout << "fuga" << endl;
            X_ng = X;
        }
        // cout << "X_ok: " << X_ok << endl;
        // cout << "X_ng: " << X_ng << endl;
    }
    return X_ok;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    long long L;
    std::cin >> N;
    std::vector<long long> A(N);
    std::cin >> L;
    REP(i, N) {
        std::cin >> A[i];
    }
    auto ans = solve(N, L, A);
    std::cout << ans << '\n';
    return 0;
}
