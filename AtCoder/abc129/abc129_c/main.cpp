#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
using ll = long long;
using pi = pair<int, int>;

constexpr int64_t MOD = 1000000007;
int64_t solve(int64_t N, ll M, const std::vector<int64_t> &a) {
    vector<bool> ok(N + 1, true);
    REP(i, M) {
        ok[a[i]] = false;
    }

    const ll MOD = pow(10, 9) + 7;

    vector<ll> cnt(N + 1, 0);
    cnt[0] = 1;

    REP3(i, 1, N + 1) {
        if (ok[i]) {
            if (i == 1) {
                cnt[i] = cnt[i - 1];
            } else {
                cnt[i] = (cnt[i - 1] + cnt[i - 2]) % MOD;
            }
        }
    }
    return cnt[N];
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N;
    int64_t M;
    std::cin >> N >> M;
    std::vector<int64_t> a(N);
    REP(i, N) {
        std::cin >> a[i];
    }
    auto ans = solve(N, M, a);
    std::cout << ans << '\n';
    return 0;
}
