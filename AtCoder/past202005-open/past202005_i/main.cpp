#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
using ll = long long;
using pi = pair<int, int>;

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    ll N, Q;
    std::cin >> N >> Q;
    // std::vector<vector<ll>> Query(Q, vector<ll>(3));

    vector<ll> row_num(N);
    vector<ll> col_num(N);
    REP(i, N) {
        row_num[i] = i;
        col_num[i] = i;
    }
    vector<ll> Query(3);
    bool trans_flag = false;
    REP(i, Q) {
        std::cin >> Query[0];
        if (Query[0] != 3) {
            std::cin >> Query[1] >> Query[2];
        }
        ll t = Query[0];
        ll a;
        ll b;
        if (t != 3) {
            a = Query[1];
            b = Query[2];
            a--;
            b--;
        }

        if (t == 1) {
            swap(row_num[a], row_num[b]);
        } else if (t == 2) {
            swap(col_num[a], col_num[b]);
        } else if (t == 3) {
            swap(row_num, col_num);
            trans_flag = !trans_flag;
            
        } else {
            if (trans_flag) {
                cout << col_num[b] * N + row_num[a] << endl;
            } else {
                cout << row_num[a] * N + col_num[b] << endl;
            }
        }
    }
    return 0;
}
