#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
using ll = long long;
using pi = pair<int, int>;

double dp[3010][3010] = {0.0};

double solve(int N, const std::vector<double> &p) {
    // 初期条件
    dp[0][0] = 1.0;

    // DPループ
    REP(i, N) {          // i: コインの枚数
        REP(j, i + 1) {  // j: 表の枚数
            // 次のコインが表の場合
            dp[i + 1][j + 1] += dp[i][j] * p[i];
            // 次のコインが裏の場合
            dp[i + 1][j] += dp[i][j] * (1.0 - p[i]);
        }
    }

    double res = 0.0;
    REP3(j, N / 2 + 1, N + 1) {  // 半分より多く表が出ないと集計対象外なため、N/2+1をしている
        res += dp[N][j];
    }
    return res;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    std::cin >> N;
    std::vector<double> p(N);
    REP(i, N) {
        std::cin >> p[i];
    }
    auto ans = solve(N, p);
    std::cout << fixed << setprecision(10) << ans << '\n';
    return 0;
}
