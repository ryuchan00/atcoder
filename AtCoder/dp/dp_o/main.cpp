#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
#define bit(n, k) ((n >> k) & 1) /*nのk bit目*/

using namespace std;
using ll = long long;
using pi = pair<int, int>;

#include "atcoder/modint.hpp"
using mint = atcoder::modint1000000007;

// https://emtubasa.hateblo.jp/entry/2019/02/05/183137

constexpr int64_t MOD = 1000000007;
mint dp[22][(1 << 22)] = {0};

int64_t solve(int N, const std::vector<std::vector<int64_t> > &a) {
    REP(i, N) {
        if (a[0][i]) {
            dp[0][(1 << N) - 1 - (1 << i)] = 1;
        }
    }
    for (int i = 1; i < N; ++i)
        for (int j = 0; j < N; ++j)
            if (a[i][j]) {
                for (int k = 0; k < (1 << N); ++k)
                    // if ((k >> j) % 2 == 0) {
                    if ((k & (1 << j)) == 0) {
                        dp[i][k] = dp[i][k] + dp[i - 1][k | (1 << j)];
                    }
            }

    REP(i, N) {
            cout << dp[N-1][i].val() << " ";
        cout << endl;
    }
    return dp[N - 1][0].val();
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    std::cin >> N;
    std::vector<std::vector<int64_t> > a(N, std::vector<int64_t>((N)));
    REP(j, N) {
        REP(i, N) {
            std::cin >> a[j][i];
        }
    }
    auto ans = solve(N, a);
    std::cout << ans << '\n';
    return 0;
}
