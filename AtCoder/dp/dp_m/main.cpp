#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
using ll = long long;
using pi = pair<int, int>;

#include "atcoder/modint.hpp"
using mint = atcoder::modint1000000007;

constexpr int64_t MOD = 1000000007;

void solve(int N, int64_t K, const std::vector<ll> &a) {
    vector<vector<mint>> dp(N + 1, vector<mint>(K + 1, 0));
    dp[0][0] = 1;
    for (int i = 0; i < N; ++i) {
        // dp[i] の累積和を求める
        vector<mint> sum_dp(K + 2, 0);
        for (int j = 0; j <= K; ++j) {
            sum_dp[j + 1] = sum_dp[j] + dp[i][j];
        }

        // dp[i+1] を求める
        for (int j = 0; j <= K; ++j) {
            dp[i + 1][j] = sum_dp[j + 1] - sum_dp[j - min((ll)j, a[i])];
        }
    }
    cout << dp[N][K].val() << endl;;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    int64_t K;
    std::cin >> N;
    std::vector<ll> a(N);
    std::cin >> K;
    REP(i, N) {
        std::cin >> a[i];
    }
    solve(N, K, a);
    // mint ans = solve(N, K, a);
    // std::cout << ans << '\n';
    return 0;
}
