#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
using ll = long long;
using pi = pair<int, int>;

bool check(int N, int M, const std::vector<int64_t> &A, const std::vector<int64_t> &B, const std::vector<int64_t> &C, const std::vector<int64_t> &D, double X) {
    vector<double> P(N, 0);
    REP(i, N) {
        P[i] = (double)B[i] - (double)A[i] * X;
    }
    vector<double> Q(M, 0);
    REP(i, M) {
        Q[i] = (double)D[i] - (double)C[i] * X;
    }
    sort(P.begin(), P.end(), greater());
    sort(Q.begin(), Q.end(), greater());
    // REP(i, N) {
    //     cout << P[i] << ' ';
    // }

    double sum1 = 0;
    double sum2 = 0;

    REP(i, 5) {
        sum1 += P[i];
    }

    REP(i, 4) {
        sum2 += P[i];
    }
    sum2 += Q[0];

    if (sum1 >= 0 || sum2 >= 0) {
        return true;
    } else {
        return false;
    }
}

double solve(int N, int M, const std::vector<int64_t> &A, const std::vector<int64_t> &B, const std::vector<int64_t> &C, const std::vector<int64_t> &D) {
    double X_ok = 0.0;
    double X_ng = 2e5;

    double X = 0.0;
    // 多めに100回試行する
    REP(_, 100) {
        // 二分探索の1回の試行
        X = (X_ok + X_ng) / (double)2.0;

        if (check(N, M, A, B, C, D, X)) {
            X_ok = X;
        } else {
            X_ng = X;
        }
    }
    return X_ok;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N, M;
    std::cin >> N;
    std::vector<int64_t> A(N), B(N);
    std::cin >> M;
    std::vector<int64_t> C(M), D(M);
    REP(i, N) {
        std::cin >> A[i] >> B[i];
    }
    REP(i, M) {
        std::cin >> C[i] >> D[i];
    }
    double ans = solve(N, M, A, B, C, D);
    std::cout << std::fixed;
    std::cout << setprecision(13) << ans << '\n';
    // std::cout << ans << '\n';
    return 0;
}
