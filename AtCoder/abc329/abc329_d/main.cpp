// #include <bits/stdc++.h>

// #include <iostream>
// #define int long long
// #define endl '\n'
// using namespace std;
// // int a[200010];
// // int b[200010] = {0};
// vector<int> a(200010);
// vector<int> b(200010, 0);
// signed main() {
//     int i, j, t, k, m, n, max1, max2, s = 0, sum;
//     cin >> m >> n;
//     for (i = 0; i < n; i++)
//         cin >> a[i];
//     max1 = 0;
//     t = 0;
//     for (i = 0; i < n; i++) {
//         b[a[i]]++;
//         if (max1 < b[a[i]]) {
//             max1 = b[a[i]];
//             t = a[i];
//         } else if (max1 == b[a[i]])
//             if (t > a[i]) {
//                 max1 = b[a[i]];
//                 t = a[i];
//             }
//         cout << t << endl;
//     }
// }
#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
using ll = long long;
using pi = pair<int, int>;

auto solve(ll N, ll M, vector<ll> A) {
    vector<ll> c(200010, 0);
    ll max = 0;
    ll t;
    REP(i, M) {
        c[A[i]]++;
        // auto max = max_element(c.begin(), c.end());
        if (max < c[A[i]]) {
            max = c[A[i]];
            t = A[i];
        } else if (max == c[A[i]]) {
            if (t > A[i]) {
                max = c[A[i]];
                t = A[i];
            }
        }
        cout << t << endl;
    }
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    ll N, M;
    std::cin >>
        N >> M;
    vector<ll> A(200010);
    REP(i, M) {
        std::cin >> A[i];
    }
    vector<ll> c(200010, 0);
    ll max = 0;
    ll t;
    REP(i, M) {
        c[A[i]]++;
        // auto max = max_element(c.begin(), c.end());
        if (max < c[A[i]]) {
            max = c[A[i]];
            t = A[i];
        } else if (max == c[A[i]]) {
            if (t > A[i]) {
                max = c[A[i]];
                t = A[i];
            }
        }
        cout << t << endl;
    }
    return 0;
}
