#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
using ll = long long;
using pi = pair<int, int>;

// 平均値がXが異常になるような選び方が存在するか調べる関数
bool check_average(int N, const std::vector<long long> &A, double X) {
    vector<double> B(N, 0);
    // cout << X << endl;
    REP(i, N) {
        B[i] = (double)A[i] - X;
    }
    vector<double> S(N + 1, 0);
    vector<double> T(N + 1, 0);
    REP(i, N) {
        S[i + 1] = max(T[i], S[i]) + B[i];
        T[i + 1] = S[i];
    }
    // cout << S[N] << ":" << T[N] << endl;
    return (max(S[N], T[N]) >= 0);
}

// 中央値がX以上になるような選び方が存在するか調べる関数
bool check_median(int N, const std::vector<long long> &A, ll X) {
    vector<ll> B(N, 0);
    REP(i, N) {
        if (A[i] >= X) {
            B[i] = 1;
        } else {
            B[i] = -1;
        }
    }
    vector<ll> S(N + 1, 0);
    vector<ll> T(N + 1, 0);
    REP(i, N) {
        S[i + 1] = max(T[i], S[i]) + B[i];
        T[i + 1] = S[i];
    }
    return max(S[N], T[N]) > 0;
}

void solve(int N, const std::vector<long long> &A) {
    // 平均値の最大値を二分探索で求める
    double X_ok = 0.0;
    double X_ng = 1e9 + 1.0;
    double X;
    // REP(_, 100) {
    while ((X_ng - X_ok) > 1) {
        X = (X_ok + X_ng) / 2.0;
        if (check_average(N, A, X)) {
            X_ok = X;
        } else {
            X_ng = X;
        }
    }
    // cout << X << endl;
    double max_average = X_ok;
    std::cout << std::fixed;
    // cout << max_average << endl;
    std::cout << setprecision(16) << max_average << endl;

    ll X_ok2 = 0;
    ll X_ng2 = pow(10, 10);
    ll X2;
    // cout << (X_ng2 - X_ok2) << endl;
    while ((X_ng2 - X_ok2) > 1) {
        X2 = (X_ok2 + X_ng2) / 2;
        if (check_median(N, A, X2)) {
            X_ok2 = X2;
        } else {
            X_ng2 = X2;
        }
    }
    cout << X_ok2 << endl;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    std::cin >> N;
    std::vector<long long> A(N);
    REP(i, N) {
        std::cin >> A[i];
    }
    solve(N, A);
    // std::cout << c << ' ' << d << '\n';
    return 0;
}
